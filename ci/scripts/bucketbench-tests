#!/bin/bash
# vim: set ft=sh

set -e -x

# apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D
# echo "/etc/apt/sources.list.d/docker.list" >> /etc/apt/sources.list.d/docker.list
# echo "deb https://apt.dockerproject.org/repo debian-jessie main" > /etc/apt/sources.list.d/docker.list
# apt-get install -y apt-transport-https ca-certificates
# apt-get update && apt-get install -y docker-engine
# systemctl start docker

source $(dirname $0)/aufs

export GOPATH=$PWD/gr-release-develop
export PATH=$PATH:$GOPATH/bin

go get github.com/estesp/bucketbench
go get github.com/jteeuwen/go-bindata/go-bindata

LINUX_ASSETS=$PWD/linux
rm -rf $LINUX_ASSETS
mkdir -p $LINUX_ASSETS/{bin,sbin}

cp /opt/static-assets/tar $LINUX_ASSETS/bin/tar

# go-bindata does weird stuff with symlinks. we only care about iptables anyway
cp -aL /opt/static-assets/iptables/sbin/iptables $LINUX_ASSETS/sbin/iptables
cp -aL /opt/static-assets/iptables/sbin/iptables-restore $LINUX_ASSETS/sbin/iptables-restore

pushd gr-release-develop
  # workaround 'mv /root/.tmp/... /tmp/...: invalid cross-device link'
  HOME=$PWD bosh sync-blobs

  (
    set -e -u -x

    export GOPATH=$PWD

    go install code.cloudfoundry.org/guardian/cmd/dadoo
    go install code.cloudfoundry.org/guardian/cmd/init

    #install default version of runc ?
    pushd src/github.com/opencontainers/runc
      PKG_CONFIG_PATH=/opt/static-assets/libseccomp/lib/pkgconfig \
        GOPATH=$PWD/Godeps/_workspace:$GOPATH \
        BUILDTAGS=seccomp \
        make static

      mv runc /usr/local/sbin/
    popd

    pushd src/code.cloudfoundry.org/guardian/rundmc/nstar
      make
      mv nstar $LINUX_ASSETS/bin
    popd

    cp bin/{init,dadoo} /usr/local/bin
  )
popd

go-bindata -nomemcopy -pkg bindata -o gr-release-develop/src/code.cloudfoundry.org/guardian/bindata/bindata.go  linux/...

# must be built with 'daemon' flag because of docker packages :|
go build \
  -tags daemon \
  -o /usr/local/bin/gdn \
  code.cloudfoundry.org/guardian/cmd/gdn

tmpdir=/tmp/dir
rm -fr $tmpdir
mkdir $tmpdir
mount -t tmpfs none $tmpdir

mkdir $tmpdir/depot
mkdir $tmpdir/snapshots
mkdir $tmpdir/graph

permit_device_control
create_loop_devices 256

#execute tests
